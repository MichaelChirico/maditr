% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_list.R
\name{to_list}
\alias{to_list}
\alias{to_vec}
\alias{to_df}
\alias{to_dfr}
\alias{to_dfc}
\title{Title}
\usage{
to_list(
  data,
  expr = NULL,
  ...,
  skip_null = TRUE,
  trace = FALSE,
  trace_step = 1L
)

to_vec(
  data,
  expr = NULL,
  ...,
  skip_null = TRUE,
  trace = FALSE,
  trace_step = 1L,
  recursive = TRUE,
  use.names = TRUE
)

to_df(data, expr = NULL, ..., trace = FALSE, trace_step = 1L, idcol = NULL)

to_dfr(data, expr = NULL, ..., trace = FALSE, trace_step = 1L, idcol = NULL)

to_dfc(data, expr = NULL, ..., trace = FALSE, trace_step = 1)
}
\arguments{
\item{data}{data.frame/list/vector}

\item{expr}{expression}

\item{skip_null}{logical Should we skip NULL's from result? Default is TRUE}
}
\value{
list
}
\description{
Title
}
\examples{
1:10 \%>\%
    to_list(rnorm, n = 10) \%>\%
    to_vec(mean)

# Or use an anonymous function
1:10 \%>\%
    to_list(function(x) rnorm(10, x))

# Or an expression
1:10 \%>\%
    to_list(rnorm(10, .x))

# Using set_names() with character vectors is handy to keep track
# of the original inputs:
c(foo = "foo", bar = "bar") \%>\% to_vec(paste0, ":suffix")


# A more realistic example: split a data frame into pieces, fit a
# model to each piece, summarise and extract R^2
mtcars \%>\%
    split(.$cyl) \%>\%
    to_list(lm(mpg ~ wt, data = .x)) \%>\%
    to_list(summary) \%>\%
    to_vec(.x$r.squared)

# Use map_lgl(), map_dbl(), etc to reduce output to a vector instead
# of a list:
mtcars \%>\% to_vec(sum)

# If each element of the output is a data frame, use
# map_dfr to row-bind them together:
mtcars \%>\%
    split(.$cyl) \%>\%
    to_list(lm(mpg ~ wt, data = .x)) \%>\%
    to_dfr(t(as.matrix(coef(.x))))
}
